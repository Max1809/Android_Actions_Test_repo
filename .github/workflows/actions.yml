name: Building the APK as sample 

on:
  # Trigger on every pull request and on push
  # to the `main` branch.
  pull_request:
  push:
    branches:
      - main

jobs:
  # Building the sourcecode by checking it out firstly and then building it with Gradle
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Build the app
        run: ./gradlew build
        
      - name: Setup JFrog artifactory 
        uses: jfrog/setup-jfrog-cli@v3
        env:
          # JFrog platform url (for example: https://acme.jfrog.io) 
          JF_URL: ${{ secrets.JF_URL }}
    
          # JFrog Platform access token
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

# Execute unit tests
      - name: Unit Test
        run: ./gradlew testDebugUnitTest
        
# Deploy the artifact (APK) to JFrog artifactory
      - name: Getting JFrog version printed out
        run: jf --version
        
# Ping JFrog
      - name: Ping Jfrog
        run: jf rt ping

# Upload artifacts finally
      - name: Upload APK to Jfrog
        run: |
         jf rt u "app/build/outputs/apk/debug/(*).apk" androidapptest-generic-local/debug-releases/{1} --recursive=false
         jf rt bp

# Show Android Test Report 
      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }} # IMPORTANT: run Android Test Report 
